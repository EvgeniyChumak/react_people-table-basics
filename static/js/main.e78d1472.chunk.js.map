{"version":3,"sources":["components/Home.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFound.tsx","App.tsx","index.tsx"],"names":["Home","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","to","name","sex","isMother","cn","PeopleTable","people","selected","map","person","slug","born","died","mother","motherName","father","fatherName","PeoplePage","params","useParams","useState","setPeople","loading","setLoading","hasError","setHasError","useEffect","data","peopleFromServer","per","find","catch","finally","length","NotFound","getLinkClass","isActive","App","role","end","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e78d1472.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Home: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface PersonLinkProps {\n  to: string;\n  name: string;\n  sex: string;\n  isMother?: boolean;\n}\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({\n  to,\n  name,\n  sex,\n  isMother = false,\n}) => {\n  return (\n    <Link\n      to={to}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {isMother && (\n        <span className=\"has-text-danger\">\n          {name}\n        </span>\n      )}\n      {!isMother && name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface PeopleTableProps {\n  people: Person[];\n  selected: string;\n}\n\n// eslint-disable-next-line\nexport const PeopleTable: React.FC<PeopleTableProps> = ({ people, selected }) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n          <tbody>\n            {people.map(person => (\n              <tr\n                key={person.slug}\n                data-cy=\"person\"\n                className={cn({\n                  'has-background-warning': selected === person.slug,\n                })}\n              >\n                <td>\n                  <PersonLink\n                    to={`/people/${person.slug}`}\n                    name={person.name}\n                    sex={person.sex}\n                  />\n                </td>\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <td>\n                  {person.mother?.slug ? (\n                    <PersonLink\n                      to={`/people/${person.mother?.slug}`}\n                      name={person.mother.name}\n                      sex={person.mother.sex}\n                      isMother\n                    />\n                  ) : (\n                    <p>{person.motherName ? person.motherName : '-'}</p>\n                  )}\n                </td>\n                <td>\n                  {person.father?.slug ? (\n                    <PersonLink\n                      to={`/people/${person.father?.slug}`}\n                      name={person.father.name}\n                      sex={person.father.sex}\n                    />\n                  ) : (\n                    <p>{person.fatherName ? person.fatherName : '-'}</p>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const params = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const selected = params.slug ? params.slug : '';\n\n  const matchMotherAndFather = (peopleFromServer: Person[]): Person[] => {\n    return peopleFromServer.map((per): Person => {\n      const mother = peopleFromServer.find(\n        person => person.name === per.motherName,\n      );\n\n      const father = peopleFromServer.find(\n        person => person.name === per.fatherName,\n      );\n\n      return { ...per, mother, father };\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(data => matchMotherAndFather(data))\n      .then((data) => setPeople(data))\n      .catch(() => setHasError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {loading && (\n        <Loader />\n      )}\n      {hasError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n      {people.length === 0 && !loading && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n      {people.length !== 0 && !loading && (\n        <PeopleTable people={people} selected={selected} />\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFound: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './App.scss';\nimport {\n  NavLink, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { Home } from './components/Home';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFound } from './components/NotFound';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n            end\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}